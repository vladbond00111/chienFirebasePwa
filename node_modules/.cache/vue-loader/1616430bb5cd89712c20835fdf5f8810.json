{"remainingRequest":"/home/vlad/document/git/cropchien1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vlad/document/git/cropchien1/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vlad/document/git/cropchien1/src/components/Post.vue","mtime":1627459600042},{"path":"/home/vlad/document/git/cropchien1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlad/document/git/cropchien1/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlad/document/git/cropchien1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vlad/document/git/cropchien1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlad/document/git/cropchien1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHBvc3REb2cgZnJvbSAnLi9taXhpbnMvcG9zdERvZy5qcycKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIGRvZ1VybDogbnVsbCwKICAgICAgdGl0bGU6JycsCiAgICAgIGF1dGhvcjonJywKICAgICAgbG9hZGluZzp0cnVlLAogICAgfQogIH0sCiAgbW91bnRlZCgpewogICAgYXhpb3MuZ2V0KCdodHRwczovL2RvZy5jZW8vYXBpL2JyZWVkL2FwcGVuemVsbGVyL2ltYWdlcy9yYW5kb20nKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgaWYocmVzcG9uc2UuZGF0YS5zdGF0dXMpewogICAgICAgIHRoaXMuZG9nVXJsID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICAgIHRoaXMubG9hZGluZz1mYWxzZTsKICAgICAgfWVsc2V7CiAgICAgICAgY29uc29sZS5sb2coIkVycm9yIGdldHRpbmcgaW1hZ2UiKQogICAgICB9CiAgICB9KQogIH0sCiAgbWV0aG9kczp7CiAgICBwb3N0KCl7CiAgICAgIHBvc3REb2codGhpcy5kb2dVcmwsIHRoaXMudGl0bGUsIHRoaXMuYXV0aG9yKQogICAgfQogIH0KfQo="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container grid-list-xs>\n    <v-layout>\n      <v-flex>\n        <div id=\"spinner_container\">\n          <v-progress-circular v-if=\"loading\" v-bind:size=\"40\" indeterminate color=\"pink\" class=\"spinner\">\n          </v-progress-circular>\n        </div>\n\n        <img :src=\"this.dogUrl\" />\n\n        <v-container fluid style=\"min-height: 0\" grid-list-lg>\n          <v-layout row wrap>\n            <v-flex xs12>\n              <v-text-field v-model=\"title\" name=\"title\" label=\"Describe me\" id=\"title\"/>\n              <v-text-field v-model=\"author\" name=\"author\" label=\"Author\" hint=\"your name\" id=\"author\"/>\n              <v-btn block color=\"primary\"\n                     @click=\"post()\">\n                POST A DOG\n              </v-btn>\n            </v-flex>\n          </v-layout>\n        </v-container>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n  import axios from 'axios'\n  import postDog from './mixins/postDog.js'\n  export default {\n    data(){\n      return {\n        dogUrl: null,\n        title:'',\n        author:'',\n        loading:true,\n      }\n    },\n    mounted(){\n      axios.get('https://dog.ceo/api/breed/appenzeller/images/random').then(response => {\n        if(response.data.status){\n          this.dogUrl = response.data.message;\n          this.loading=false;\n        }else{\n          console.log(\"Error getting image\")\n        }\n      })\n    },\n    methods:{\n      post(){\n        postDog(this.dogUrl, this.title, this.author)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  img {\n    max-width: 100%;\n    height: auto;\n    width: auto\\9;\n    /* ie8 */\n  }\n  #spinner_container{\n    text-align: center;\n  }\n  .spinner{\n    margin:auto;\n    margin: 4rem;\n  }\n</style>\n"]}]}