{"remainingRequest":"/home/vlad/document/git/chienFirebasePwa/node_modules/babel-loader/lib/index.js!/home/vlad/document/git/chienFirebasePwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vlad/document/git/chienFirebasePwa/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vlad/document/git/chienFirebasePwa/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vlad/document/git/chienFirebasePwa/src/components/Post.vue","mtime":1627459600042},{"path":"/home/vlad/document/git/chienFirebasePwa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlad/document/git/chienFirebasePwa/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vlad/document/git/chienFirebasePwa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlad/document/git/chienFirebasePwa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHBvc3REb2cgZnJvbSAnLi9taXhpbnMvcG9zdERvZy5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZG9nVXJsOiBudWxsLAogICAgICB0aXRsZTogJycsCiAgICAgIGF1dGhvcjogJycsCiAgICAgIGxvYWRpbmc6IHRydWUKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoJ2h0dHBzOi8vZG9nLmNlby9hcGkvYnJlZWQvYXBwZW56ZWxsZXIvaW1hZ2VzL3JhbmRvbScpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1cykgewogICAgICAgIF90aGlzLmRvZ1VybCA9IHJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5sb2coIkVycm9yIGdldHRpbmcgaW1hZ2UiKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBwb3N0OiBmdW5jdGlvbiBwb3N0KCkgewogICAgICBwb3N0RG9nKHRoaXMuZG9nVXJsLCB0aGlzLnRpdGxlLCB0aGlzLmF1dGhvcik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,OAAA,MAAA,qBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,qDAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAHA,MAGA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA;AACA,KAPA;AAQA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,MAAA,OAAA,CAAA,KAAA,MAAA,EAAA,KAAA,KAAA,EAAA,KAAA,MAAA,CAAA;AACA;AAHA;AAnBA,CAAA","sourcesContent":["<template>\n  <v-container grid-list-xs>\n    <v-layout>\n      <v-flex>\n        <div id=\"spinner_container\">\n          <v-progress-circular v-if=\"loading\" v-bind:size=\"40\" indeterminate color=\"pink\" class=\"spinner\">\n          </v-progress-circular>\n        </div>\n\n        <img :src=\"this.dogUrl\" />\n\n        <v-container fluid style=\"min-height: 0\" grid-list-lg>\n          <v-layout row wrap>\n            <v-flex xs12>\n              <v-text-field v-model=\"title\" name=\"title\" label=\"Describe me\" id=\"title\"/>\n              <v-text-field v-model=\"author\" name=\"author\" label=\"Author\" hint=\"your name\" id=\"author\"/>\n              <v-btn block color=\"primary\"\n                     @click=\"post()\">\n                POST A DOG\n              </v-btn>\n            </v-flex>\n          </v-layout>\n        </v-container>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n  import axios from 'axios'\n  import postDog from './mixins/postDog.js'\n  export default {\n    data(){\n      return {\n        dogUrl: null,\n        title:'',\n        author:'',\n        loading:true,\n      }\n    },\n    mounted(){\n      axios.get('https://dog.ceo/api/breed/appenzeller/images/random').then(response => {\n        if(response.data.status){\n          this.dogUrl = response.data.message;\n          this.loading=false;\n        }else{\n          console.log(\"Error getting image\")\n        }\n      })\n    },\n    methods:{\n      post(){\n        postDog(this.dogUrl, this.title, this.author)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  img {\n    max-width: 100%;\n    height: auto;\n    width: auto\\9;\n    /* ie8 */\n  }\n  #spinner_container{\n    text-align: center;\n  }\n  .spinner{\n    margin:auto;\n    margin: 4rem;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}